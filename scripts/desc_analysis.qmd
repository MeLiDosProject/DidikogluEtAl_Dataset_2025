---
title: "Descriptive analysis"
author: "Johannes Zauner"
format: 
  html:
    self-contained: true
    code-tools: true
---

# Preface

This is a work-in-progress descriptive analysis of the `DidikogluEtAl2025` dataset.

```{r}
#| label: setup
#| include: false
library(LightLogR)
library(glue)
library(tidyverse)
library(gt)
library(readxl)
library(cowplot)
library(legendry)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(patchwork)
library(rlang)

source("overview_plot.R")
```

# Overview

## Data import: wearable data

The first step is the import of wearable data from the `head` position (mounted on glasses).

```{r}
#| label: "general information"
#time zone of Izmir
tz <-  "Europe/Istanbul"
#coordinates for Izmir
coordinates <- c(38.32, 26.63)
#regex to extract participant Id and wearing position
# pattern <- "[A-Z]+_S[0-9]{3}_[hcw]"
#regex to extract participant Id
pattern <- "[A-Z]+_S[0-9]{3}"

country_colors <- c(
  Sweden     = "#88CCEE",  # Sky blue
  Spain      = "#CC6677",  # Coral red
  Germany    = "#DDCC77",  # Mustard yellow
  Netherlands= "#117733",  # Dark green
  Turkey     = "#332288",  # Indigo
  Ghana      = "#AA4499",  # Purple-pink
  Costa_Rica = "#44AA99"   # Teal
)

```

```{r}
#path to participants
path_part1 <- "../data/raw/individual"
#path to actlumus data sans wearing position
path_part2 <- "/continuous/actlumus_"
#wearing position
wearing_position <- "head"
#getting all subfolders
folders <- dir(path_part1)
#creating complete folder names
paths <- glue("{path_part1}/{folders}{path_part2}{wearing_position}")
#collecting file names
files <- list.files(paths, full.names = TRUE)
files <- files[str_detect(files, "Report", negate = TRUE)]
```

```{r}
#the last file has a different software version and thus exports different columns
#while not a problem when importing data singularly, it is an issue when importing everything together
data <- import$ActLumus(files[1:17], tz, auto.id = pattern)
data2 <- import$ActLumus(files[18], tz, auto.id = pattern)
data <- join_datasets(data, data2)
rm(data2)
```

## Regularizing data

In the first step, we will trim the data by the study time.

```{r}
#import table with study times
Study_dates_MeLiDos_IZTECH <- read_excel("../data/Study_dates_MeLiDos_IZTECH.xlsx")
#gather the important information
Study_dates_MeLiDos_IZTECH <-
  Study_dates_MeLiDos_IZTECH |> 
    rename(Id = subjectID_device, start = datetime_trial_start, end = datetime_trial_end) |> 
    select(Id, start, end) |> 
    mutate(across(c(start, end), \(x) force_tz(x, tz)),
           trial = TRUE) |> 
    filter(str_detect(Id, "_h$")) |>
    mutate(Id = str_remove(Id, "_h$")) |> 
  group_by(Id)

#add the trim information to the dataset and filter by it
data <- 
  data |> 
  add_states(Study_dates_MeLiDos_IZTECH) |> 
  dplyr::filter(trial) |> 
  select(-trial)

data |> gg_overview()
```


```{r}
data |> has_gaps()
data |> has_irregulars()
data |> gg_gaps(group.by.days = TRUE, show.irregulars = TRUE, full.days = FALSE)

```

Only one day remains with gap/irregular data. This day, according to the study notes provided by the authors, has one entry:

> head device crushed at the first night 21/01/2025 07:15, replaced at 21/01/2025 15:28 and study continued with another device, apprx 7h gap expected, IZTECH_S004_h_1 and  IZTECH_S004_h_2 created, environmental measuremet very short record due to device replactement

This is in line with the gap plot. This can be easily rectified by shifting datetimes to the closest 10-second interval and filling in missing observations

```{r}
#| fig-height: 15
#| fig-width: 5
data_cleaned <- 
data |> 
  cut_Datetime("10 secs", New.colname = Datetime) |> #remove irregular data
  gap_handler(full.days = TRUE) #remove implicit gaps

data_cleaned |> has_gaps() #no more implicit gaps
data_cleaned |> has_irregulars() #no more irregular data
data_cleaned |> gap_table(MEDI) |> cols_hide(ends_with("_n"))
```

## Visualization

```{r}
#| warning: false
#| message: false
#| fig-height: 8
#| fig-width: 12

data_cleaned |> 
  mutate(Id = Id |> fct_relabel(\(x) str_remove(x, "IZTECH_"))) |> 
grand_overview(coordinates, "Izmir", "Turkey", country_colors, map_site_label_color = "white")

ggsave("../output/figures/Figure_1.png", width = 17, height = 10, scale = 2, units = "cm")
```



